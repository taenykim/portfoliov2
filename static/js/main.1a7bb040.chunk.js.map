{"version":3,"sources":["components/Home/gg.png","components/Home/1.jpg","components/Menu/gg.png","components/Menu/gg2.png","components/Home/12.jpg","components/Menu/Menu.js","components/Home/Home.js","components/Project/Project.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Menu","logo_style","height","emoji_style","fontSize","now_contents","this","props","className","style","src","logo","menu","Component","Home","github_style","width","marginRight","github","about","project_image","Project","App","state","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4FAAAA,EAAOC,QAAU,IAA0B,gC,qBCA3CD,EAAOC,QAAU,IAA0B,+B,kBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,kSCiC5BC,E,iLA1BX,IAAMC,EAAa,CACjBC,OAAQ,QAEJC,EAAc,CAClBC,SAAU,QAGJC,EAAiBC,KAAKC,MAAtBF,aACR,OACE,yBAAKG,UAAU,kBACb,yBAAKA,UAAU,aACb,yBAAKC,MAAOR,EAAYS,IAAKC,OAE/B,yBAAKH,UAAU,YACb,0BAAMC,MAAON,GAAb,gBACCE,EACD,0BAAMI,MAAON,GAAb,iBAEF,yBAAKK,UAAU,aACb,yBAAKC,MAAOR,EAAYS,IAAKE,Y,GArBpBC,a,yDC4DJC,E,iLAzDX,IAAMC,EAAe,CACnBC,MAAO,OACPC,YAAa,QAGf,OACE,yBAAKT,UAAU,kBACb,yBAAKA,UAAU,wBACb,6BACE,yCACW,yBAAKA,UAAU,4BAD1B,cAGA,6CACe,yBAAKA,UAAU,4BAD9B,mBAMJ,yBAAKA,UAAU,oBAAf,SACA,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,wBAAf,kCACA,yBAAKA,UAAU,wBAAf,kgBAMA,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,4BACb,yBAAKC,MAAOM,EAAcL,IAAKQ,MAC/B,yBAAKT,MAAOM,EAAcL,IAAKQ,MAC/B,yBAAKT,MAAOM,EAAcL,IAAKQ,OAEjC,yBAAKV,UAAU,+BACb,yBAAKC,MAAOM,EAAcL,IAAKQ,MAC/B,yBAAKT,MAAOM,EAAcL,IAAKQ,MAC/B,yBAAKT,MAAOM,EAAcL,IAAKQ,MAC/B,yBAAKT,MAAOM,EAAcL,IAAKQ,MAC/B,yBAAKT,MAAOM,EAAcL,IAAKQ,MAC/B,yBAAKT,MAAOM,EAAcL,IAAKQ,SAIrC,yBAAKV,UAAU,mBAAmBE,IAAKS,OAEzC,yBAAKX,UAAU,sBAAf,WACA,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,gBAAgBE,IAAKU,MACpC,yBAAKZ,UAAU,gBAAgBE,IAAKU,MACpC,yBAAKZ,UAAU,gBAAgBE,IAAKU,Y,GApD3BP,aCQJQ,G,uLAVD,IACEhB,EAAiBC,KAAKC,MAAtBF,aACR,OACI,6BACKA,O,GALKQ,cCuBPS,E,2MAnBbC,MAAQ,CACNlB,aAAc,Q,wEAGd,OACE,yBAAKG,UAAU,kBACb,kBAAC,EAAD,CAAMH,aAAcC,KAAKiB,MAAMlB,eACF,SAA5BC,KAAKiB,MAAMlB,cAA2B,kBAAC,EAAD,MACV,aAA5BC,KAAKiB,MAAMlB,cACV,kBAAC,EAAD,CAASA,aAAcC,KAAKiB,MAAMlB,eAEP,aAA5BC,KAAKiB,MAAMlB,cACV,kBAAC,EAAD,CAASA,aAAcC,KAAKiB,MAAMlB,oB,GAb1BQ,aCMEW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.1a7bb040.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gg.06d1a944.png\";","module.exports = __webpack_public_path__ + \"static/media/1.cbaa80ab.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gg.06d1a944.png\";","module.exports = __webpack_public_path__ + \"static/media/gg2.8351a469.png\";","module.exports = __webpack_public_path__ + \"static/media/12.7d11b0ad.jpg\";","import React, { Component } from \"react\";\r\nimport \"./Menu.css\";\r\nimport logo from \"./gg.png\";\r\nimport menu from \"./gg2.png\";\r\n\r\nclass Menu extends Component {\r\n  render() {\r\n    const logo_style = {\r\n      height: \"30px\"\r\n    };\r\n    const emoji_style = {\r\n      fontSize: \"12px\"\r\n    };\r\n\r\n    const { now_contents } = this.props;\r\n    return (\r\n      <div className=\"menu_container\">\r\n        <div className=\"menu_home\">\r\n          <img style={logo_style} src={logo} />\r\n        </div>\r\n        <div className=\"menu_now\">\r\n          <span style={emoji_style}>üöÄ</span>\r\n          {now_contents}\r\n          <span style={emoji_style}>üöÄ</span>\r\n        </div>\r\n        <div className=\"menu_menu\">\r\n          <img style={logo_style} src={menu} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n","import React, { Component } from \"react\";\r\nimport \"./Home.css\";\r\nimport about from \"./12.jpg\";\r\nimport github from \"./gg.png\";\r\nimport project_image from \"./1.jpg\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    const github_style = {\r\n      width: \"30px\",\r\n      marginRight: \"15px\",\r\n    };\r\n\r\n    return (\r\n      <div className=\"home_container\">\r\n        <div className=\"home_first_container\">\r\n          <div>\r\n            <div>\r\n              Front-end<div className=\"home_first_container_br\"></div> Developer\r\n            </div>\r\n            <div>\r\n              Kim Taeeun's <div className=\"home_first_container_br\"></div>\r\n              Portfolio v.2\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"home_about_title\">ABOUT</div>\r\n        <div className=\"home_about_container\">\r\n          <div className=\"home_about_desc\">\r\n            <div className=\"home_about_desc_head\">ÏïàÎÖïÌïòÏÑ∏Ïöî</div>\r\n            <div className=\"home_about_desc_body\">\r\n              Ï†ÄÎäî Ï†úÏ£ºÎèÑÏóêÏÑú ÌÉúÏñ¥ÎÇò ÌòÑÏû¨Îäî ÏàòÏõêÏóê Í±∞Ï£ºÌïòÍ≥† ÏûàÎäî ÌîÑÎ°†Ìä∏ÏóîÎìú\r\n              Í∞úÎ∞úÏûê ÏßÄÎßùÏÉù ÍπÄÌÉúÏùÄÏûÖÎãàÎã§. ÎåÄÌïôÍµêÏóêÏÑú Ïù∏ÌÑ∞Î†âÏÖò ÎîîÏûêÏù∏Í≥º\r\n              ÌîÑÎ°úÍ∑∏ÎûòÎ∞ç ÏàòÏóÖÏùÑ Îì£Í≥† Ìù•ÎØ∏Î•º ÎäêÍª¥ Í∞úÎ∞ú Í≥µÎ∂ÄÎ•º ÏãúÏûëÌïòÍ≤å\r\n              ÎêòÏóàÏäµÎãàÎã§.\r\n            </div>\r\n            <div className=\"home_about_desc_foot\">\r\n              <div className=\"home_about_desc_foot_sns\">\r\n                <img style={github_style} src={github} />\r\n                <img style={github_style} src={github} />\r\n                <img style={github_style} src={github} />\r\n              </div>\r\n              <div className=\"home_about_desc_foot_skills\">\r\n                <img style={github_style} src={github} />\r\n                <img style={github_style} src={github} />\r\n                <img style={github_style} src={github} />\r\n                <img style={github_style} src={github} />\r\n                <img style={github_style} src={github} />\r\n                <img style={github_style} src={github} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <img className=\"home_about_image\" src={about} />\r\n        </div>\r\n        <div className=\"home_project_title\">PROJECT</div>\r\n        <div className=\"home_project_container\">\r\n          <img className=\"project_image\" src={project_image} />\r\n          <img className=\"project_image\" src={project_image} />\r\n          <img className=\"project_image\" src={project_image} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport \"./Project.css\";\r\n\r\nclass Project extends Component {\r\n    render() {\r\n        const { now_contents } = this.props;\r\n        return (\r\n            <div>\r\n                {now_contents}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Project;","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Menu from \"./components/Menu/Menu\";\r\nimport Home from \"./components/Home/Home\";\r\nimport Project from \"./components/Project/Project\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    now_contents: \"HOME\" //home, project(n)\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"full_container\">\r\n        <Menu now_contents={this.state.now_contents} />\r\n        {this.state.now_contents === \"HOME\" && <Home />}\r\n        {this.state.now_contents === \"project1\" && (\r\n          <Project now_contents={this.state.now_contents} />\r\n        )}\r\n        {this.state.now_contents === \"project2\" && (\r\n          <Project now_contents={this.state.now_contents} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}